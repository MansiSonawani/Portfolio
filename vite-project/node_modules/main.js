import './style.css';
import * as THREE from 'three';
import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'
const scene = new THREE.Scene();

const camera = new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight, 0.1,  1000);

const renderer = new THREE.WebGL1Renderer({
  canvas : document.querySelector('#bg'),
});

renderer.setPixelRatio(window.devicePixelRatio);
renderer.setSize(window.innerWidth, window.innerHeight);
camera.position.setZ(30);
renderer.render(scene, camera);

const textureLoader = new THREE.TextureLoader();

// Load the images for each side of the cube
const frontTexture = textureLoader.load('./images/front.jpg');
const backTexture = textureLoader.load('./images/back.jpg');
const leftTexture = textureLoader.load('./images/left.jpg');
const rightTexture = textureLoader.load('./images/right.jpg');
const topTexture = textureLoader.load('./images/top.jpg');
const bottomTexture = textureLoader.load('./images/bottom.jpg');


const cubeGeometry = new THREE.BoxGeometry(20, 20, 20);
const material = [
  new THREE.MeshBasicMaterial({map: frontTexture}),
  new THREE.MeshBasicMaterial({map: backTexture}),
  new THREE.MeshBasicMaterial({map: leftTexture}),
  new THREE.MeshBasicMaterial({map: rightTexture}),
  new THREE.MeshBasicMaterial({map: topTexture}),
  new THREE.MeshBasicMaterial({map: bottomTexture})
];
const cubeMesh = new THREE.Mesh(cubeGeometry, material);
scene.add(cubeMesh);


const pointLight = new THREE.PointLight(0xfffffff);
pointLight.position.set(5,5,5)

const ambientLight = new THREE.AmbientLight(0xffffff);
scene.add(pointLight, ambientLight)

const lightHelper = new THREE.PointLightHelper(pointLight);

scene.add(lightHelper)
const controls = new OrbitControls(camera,renderer.domElement);


function addStar(){
  const geometry = new THREE.SphereGeometry(0.25, 24, 24);
  const material = new THREE.MeshStandardMaterial({ color: 0xfffffff})
  const star = new THREE.Mesh(geometry, material);
  const [x,y,z] = Array(3).fill().map(() => THREE.MathUtils.randFloatSpread(300));
  

  star.position.set(x,y,z);
  scene.add(star)
}

Array(200).fill().forEach(addStar)

const spaceTexture = new THREE.TextureLoader().load('space.jpg');
scene.background = spaceTexture;

function animate(){
  requestAnimationFrame(animate);
  cubeMesh.rotation.x += 0;
  cubeMesh.rotation.y += 0;
  cubeMesh.rotation.z += 0;


  controls.update()

  renderer.render(scene, camera);
}

animate()



